Index: src/main/java/com/example/planets/Merged.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.planets;\r\n\r\nimport com.example.planets.BackEnd.CelestialBody;\r\nimport com.example.planets.BackEnd.Models.Gravity0;\r\nimport javafx.animation.Animation;\r\nimport javafx.animation.Interpolator;\r\nimport javafx.animation.RotateTransition;\r\nimport javafx.application.Application;\r\nimport javafx.geometry.Point3D;\r\nimport javafx.scene.*;\r\nimport javafx.scene.control.Label;\r\nimport javafx.scene.effect.Glow;\r\nimport javafx.scene.image.Image;\r\nimport javafx.scene.input.KeyEvent;\r\nimport javafx.scene.paint.Color;\r\nimport javafx.scene.paint.PhongMaterial;\r\nimport javafx.scene.shape.Box;\r\nimport javafx.scene.shape.Cylinder;\r\nimport javafx.scene.shape.Sphere;\r\nimport javafx.scene.transform.Rotate;\r\nimport javafx.scene.transform.Translate;\r\nimport javafx.stage.Stage;\r\nimport javafx.util.Duration;\r\n\r\nimport java.util.Timer;\r\nimport java.util.TimerTask;\r\n\r\n//ToDo\r\n//add orbits\r\n//update the camera movement (figure out how to rotate with something else than 0/0/0 in the middle) -Jakub\r\n//set the planets sizes\r\n//better scale\r\n\r\n// extra stuff if we have time\r\n//add button for axis\r\n//make the sun shine\r\n//some glow around other planets (tried for the sun but it doesnt work)\r\n\r\npublic class Merged extends Application {\r\n    static Gravity0 model = new Gravity0(0, Math.PI / 2, new double[]{11, 11, 0});\r\n    private static int scale = 25;\r\n    private static int smallScale = 50;\r\n    private static int bigScale = 3000;\r\n    private static int counter = 0;\r\n    private int planetSize = 6371 / 2;\r\n    private static boolean lookAtEarth = false;\r\n    private static boolean lookAtTitan = false;\r\n    private static boolean lookAtSun = false;\r\n    private static boolean lookatEverything = false;\r\n    private static boolean lookAtSpaceship = false;\r\n\r\n    @Override\r\n    public void start(Stage stage) throws Exception {\r\n        //create a new group\r\n        Group world = createEnvironment();\r\n        Scene scene = new Scene(world, 1920, 1080, true);\r\n        //Group axis = buildAxes();\r\n        //world.getChildren().addAll(axis);\r\n        //background\r\n        scene.setFill(Color.BLACK);\r\n        stage.setScene(scene);\r\n        Camera camera = new PerspectiveCamera();\r\n        camera.setFarClip(4000);\r\n        camera.setNearClip(1);\r\n        //initial camera setting\r\n        scene.setCamera(camera);\r\n        Rotate worldRotX = new Rotate(0, Rotate.X_AXIS);\r\n        Rotate worldRotY = new Rotate(0, Rotate.Y_AXIS);\r\n        Translate worldTransX = new Translate();\r\n        camera.getTransforms().addAll(worldRotY, worldRotX);\r\n        stage.addEventHandler(KeyEvent.KEY_PRESSED, event -> {\r\n            switch (event.getCode()) {\r\n                case LEFT:\r\n                    worldRotY.setAngle(worldRotY.getAngle() - 20);\r\n                    break;\r\n                case RIGHT:\r\n                    worldRotY.setAngle(worldRotY.getAngle() + 20);\r\n                    break;\r\n                case UP:\r\n                    worldRotX.setAngle(worldRotX.getAngle() - 20);\r\n                    break;\r\n                case DOWN:\r\n                    worldRotX.setAngle(worldRotX.getAngle() + 20);\r\n                    break;\r\n                case X: //shift/Control is for z\r\n                    camera.setTranslateZ(camera.getTranslateZ() - 3500);\r\n                    break;\r\n                case Z:\r\n                    camera.setTranslateZ(camera.getTranslateZ() + 3500);\r\n                    break;\r\n                case A:// a/d is x axis\r\n                    camera.setTranslateX(camera.getTranslateX() - 1350);\r\n                    break;\r\n                case D:\r\n                    camera.setTranslateX(camera.getTranslateX() + 1350);\r\n                    break;\r\n                case W:// w/s is for y axis\r\n                    camera.setTranslateY(camera.getTranslateY() - 1350);\r\n                    break;\r\n                case S:\r\n                    camera.setTranslateY(camera.getTranslateY() + 1350);\r\n                    break;\r\n                case O:\r\n                    System.out.println(\"camera at:\");\r\n                    System.out.println(\"X: \" + camera.getTranslateX());\r\n                    System.out.println(\"Y: \" + camera.getTranslateY());\r\n                    System.out.println(\"Z: \" + camera.getTranslateZ());\r\n                    System.out.println(\"titan at: \");\r\n                    for (int i = 0; i < 3; i++) {\r\n                        System.out.println(model.getBody(8).getPos()[i] / scale);\r\n                    }\r\n                    System.out.println(\"rotation is\");\r\n                    System.out.println(\"Y: \" + worldRotY.getAngle());\r\n                    System.out.println(\"X: \" + worldRotX.getAngle());\r\n\r\n                    break;\r\n                case P:\r\n                    System.exit(0);\r\n                    break;\r\n                case DIGIT1:\r\n                    if (lookAtEarth) {\r\n                        lookAtEarth = false;\r\n                    } else {\r\n                        world.getChildren().get(7).setVisible(true);\r\n                        scale = smallScale;\r\n                        lookAtEarth = true;\r\n                        lookAtTitan = false;\r\n                        lookAtSun = false;\r\n                        lookatEverything = false;\r\n                        lookAtSpaceship = false;\r\n\r\n                    }\r\n                    break;\r\n                case DIGIT2:\r\n                    if (lookAtSun) {\r\n                        lookAtSun = false;\r\n                    } else {\r\n                        world.getChildren().get(7).setVisible(true);\r\n                        scale = smallScale;\r\n                        lookAtSun = true;\r\n                        lookAtTitan = false;\r\n                        lookAtEarth = false;\r\n                        lookatEverything = false;\r\n                        lookAtSpaceship = false;\r\n\r\n                    }\r\n                    break;\r\n                case DIGIT3:\r\n                    if (lookAtTitan) {\r\n                        lookAtTitan = false;\r\n                    } else {\r\n                        world.getChildren().get(7).setVisible(true);\r\n                        scale = smallScale;\r\n                        lookAtTitan = true;\r\n                        lookAtSun = false;\r\n                        lookAtEarth = false;\r\n                        lookatEverything = false;\r\n                        lookAtSpaceship = false;\r\n\r\n                    }\r\n                    break;\r\n                case DIGIT4:\r\n                    if (lookatEverything) {\r\n                        world.getChildren().get(7).setVisible(true);\r\n                        scale = smallScale;\r\n                        lookatEverything = false;\r\n                    } else {\r\n                        world.getChildren().get(7).setVisible(false);\r\n                        scale = bigScale;\r\n                        lookatEverything = true;\r\n                        lookAtSun = false;\r\n                        lookAtEarth = false;\r\n                        lookAtTitan = false;\r\n                        lookAtSpaceship = false;\r\n\r\n                    }\r\n                    break;\r\n                case DIGIT5:\r\n                    if (lookAtSpaceship) {\r\n                        lookAtSpaceship = false;\r\n                    } else {\r\n                        lookAtSpaceship = true;\r\n                        scale = smallScale;\r\n                        lookatEverything = false;\r\n                        lookAtSun = false;\r\n                        lookAtEarth = false;\r\n                        lookAtTitan = false;\r\n                    }\r\n                    break;\r\n            }\r\n        });\r\n\r\n        world.setTranslateZ(world.getTranslateZ() + 100000);\r\n        worldRotX.setAngle(worldRotX.getAngle());\r\n        System.out.println(camera.getRotationAxis());\r\n        world.setRotationAxis(new Point3D(model.getBody(3).getPos()[0], model.getBody(3).getPos()[1], model.getBody(3).getPos()[2]));\r\n\r\n        stage.show();\r\n\r\n        Timer timer = new Timer();\r\n        timer.schedule(new TimerTask() {\r\n            @Override\r\n            public void run() {\r\n                model.updatePos(0.1, 0.1);\r\n                for (int i = 0; i < 12; i++) {\r\n                    setPosition(world.getChildren().get(i), model.getBody(i));\r\n                }\r\n                if (lookAtEarth) {\r\n                    camera.setTranslateX(model.getBody(3).getPos()[0] / scale + 1000);\r\n                    camera.setTranslateY(model.getBody(3).getPos()[1] / scale + 2000);\r\n                    camera.setTranslateZ(model.getBody(3).getPos()[2] / scale - 24000);\r\n                }\r\n                if (lookAtSun) {\r\n                    camera.setTranslateX(-model.getBody(0).getPos()[0] / scale);\r\n                    camera.setTranslateY(-model.getBody(0).getPos()[1] / scale);\r\n                    camera.setTranslateZ(model.getBody(0).getPos()[2] / scale - 360500);\r\n                }\r\n                if (lookAtTitan) {\r\n                    camera.setTranslateX(model.getBody(8).getPos()[0] / scale + 1000);\r\n                    camera.setTranslateY(model.getBody(8).getPos()[1] / scale + 2000);\r\n                    camera.setTranslateZ(model.getBody(8).getPos()[2] / scale - 24000);\r\n                }\r\n                if (lookatEverything) {\r\n                    camera.setTranslateX(model.getBody(8).getPos()[0] / scale - 237755);\r\n                    camera.setTranslateY(model.getBody(8).getPos()[1] / scale + 115144);\r\n                    camera.setTranslateZ(model.getBody(8).getPos()[2] / scale - 471948);\r\n                }\r\n                if (lookAtSpaceship){\r\n                    camera.setTranslateX(model.getBody(11).getPos()[0] / scale + 1000);\r\n                    camera.setTranslateY(model.getBody(11).getPos()[1] / scale + 2000);\r\n                    camera.setTranslateZ(model.getBody(11).getPos()[2] / scale - 24000);\r\n                }\r\n            }\r\n        }, 1, 1);\r\n    }\r\n\r\n    public static void main(String... args) {\r\n        launch(args);\r\n    }\r\n\r\n    public static void setPosition(Node sphere, CelestialBody body) {\r\n        sphere.setTranslateX(body.getPos()[0] / scale);\r\n        sphere.setTranslateY(body.getPos()[1] / scale);\r\n        sphere.setTranslateZ(body.getPos()[2] / scale);\r\n    }\r\n\r\n    public static void setPosition(Box box, CelestialBody body) {\r\n        box.setTranslateX(body.getPos()[0] / scale);\r\n        box.setTranslateY(body.getPos()[1] / scale);\r\n        box.setTranslateZ(body.getPos()[2] / scale);\r\n    }\r\n\r\n    private void setPosition(Sphere sphere, int index) {\r\n        sphere.setTranslateX(positions[index][0] / scale);\r\n        sphere.setTranslateY(positions[index][1] / scale);\r\n        sphere.setTranslateZ(positions[index][2] / scale);\r\n    }\r\n\r\n    private void setPosition(Box box, int index) {\r\n        box.setTranslateX(positions[index][0] / scale);\r\n        box.setTranslateY(positions[index][1] / scale);\r\n        box.setTranslateZ(positions[index][2] / scale);\r\n    }\r\n\r\n    private void setPosition(Cylinder cylinder, int index) {\r\n        cylinder.setTranslateX(positions[index][0] / scale);\r\n        cylinder.setTranslateY(positions[index][1] / scale);\r\n        cylinder.setTranslateZ(positions[index][2] / scale);\r\n    }\r\n\r\n    private static double[][] positions = {{0, 0, 0}, {7.83e6, 4.49e7, 2.87e6}, {-2.82e7, 1.04e8, 3.01e6},\r\n            {-1.48e8, -2.78e7, 3.37e4}, {-1.48e8, -2.75e7, 7.02e4}, {-1.59e8, 1.89e8, 7.87e6},\r\n            {6.93e8, 2.59e8, -1.66e7}, {1.25e9, -7.60e8, -3.67e7}, {1.25e9, 7.61e8, -3.63e7},\r\n            {4.45e9, -3.98e8, -9.45e7}, {1.96e9, 2.19e9, -1.72e7}};\r\n\r\n    public Group createEnvironment() {\r\n        Group group = new Group();\r\n\r\n        //create the sun\r\n        Sphere sun = new Sphere();\r\n        setPosition(sun, 0);\r\n        sun.setRadius(planetSize);\r\n        //glow\r\n        Glow sunGlow = new Glow();\r\n        sunGlow.setLevel(1000);\r\n        //material for the sun\r\n        sun.setEffect(sunGlow);\r\n        PhongMaterial sunMaterial = new PhongMaterial();\r\n        sunMaterial.setDiffuseMap(new Image(\"sunTexture.jpg\"));\r\n        sun.setMaterial(sunMaterial);\r\n        Label sunLabel = new Label(\"SUN\");\r\n        sunLabel.setTranslateX(0);\r\n        sunLabel.setTranslateY(planetSize + sun.getRadius());\r\n        sunLabel.setTranslateZ(0);\r\n\r\n        //create mercury\r\n        Sphere mercury = new Sphere();\r\n        setPosition(mercury, 1);\r\n        mercury.setRadius(planetSize);\r\n        //material for the mercury\r\n        PhongMaterial mercuryMaterial = new PhongMaterial();\r\n        mercuryMaterial.setDiffuseMap(new Image(\"mercuryTexture.jpg\"));\r\n        mercury.setMaterial(mercuryMaterial);\r\n\r\n        // rotation for mercury\r\n\r\n        //rotation(mercury);\r\n\r\n        //create venus\r\n        Sphere venus = new Sphere();\r\n        setPosition(venus, 2);\r\n        venus.setRadius(planetSize);\r\n        //material for the venus\r\n        PhongMaterial venusMaterial = new PhongMaterial();\r\n        venusMaterial.setDiffuseMap(new Image(\"venusTexture.jpg\"));\r\n        venus.setMaterial(venusMaterial);\r\n\r\n        // rotation for venus\r\n\r\n        //rotation(venus);\r\n\r\n        //create earth\r\n        Sphere earth = new Sphere();\r\n        earth.setRadius(planetSize);\r\n        setPosition(earth, 3);\r\n        //material for the earth\r\n        PhongMaterial earthMaterial = new PhongMaterial();\r\n        earthMaterial.setDiffuseMap(new Image(\"earthTexture.jpg\"));\r\n        earth.setMaterial(earthMaterial);\r\n\r\n        // rotation for earth\r\n\r\n        //rotation(earth);\r\n\r\n        //create moon\r\n        Sphere moon = new Sphere();\r\n        setPosition(moon, 4);\r\n        moon.setRadius(500);\r\n        //material for the moon\r\n        PhongMaterial moonMaterial = new PhongMaterial();\r\n        moonMaterial.setDiffuseMap(new Image(\"moonTexture.jpg\"));\r\n        moon.setMaterial(moonMaterial);\r\n\r\n        // rotation for moon\r\n\r\n        //rotation(moon);\r\n\r\n        //create mars\r\n        Sphere mars = new Sphere();\r\n        setPosition(mars, 5);\r\n        mars.setRadius(planetSize);\r\n        //material for the mars\r\n        PhongMaterial marsMaterial = new PhongMaterial();\r\n        marsMaterial.setDiffuseMap(new Image(\"marsTexture.png\"));\r\n        mars.setMaterial(marsMaterial);\r\n\r\n        // rotation for mars\r\n\r\n        //rotation(mars);\r\n\r\n        //create jupiter\r\n        Sphere jupiter = new Sphere();\r\n        setPosition(jupiter, 6);\r\n        jupiter.setRadius(planetSize);\r\n        //material for the jupiter\r\n        PhongMaterial jupiterMaterial = new PhongMaterial();\r\n        jupiterMaterial.setDiffuseMap(new Image(\"jupiterTexture.jpg\"));\r\n        jupiter.setMaterial(jupiterMaterial);\r\n\r\n        // rotation for jupiter\r\n\r\n        //rotation(jupiter) ;\r\n\r\n        //create saturn\r\n        Sphere saturn = new Sphere();\r\n        setPosition(saturn, 7);\r\n        saturn.setRadius(planetSize);\r\n        //material for the saturn\r\n        PhongMaterial saturnMaterial = new PhongMaterial();\r\n        saturnMaterial.setDiffuseMap(new Image(\"saturnTexture.jpg\"));\r\n        saturn.setMaterial(saturnMaterial);\r\n\r\n        // rotation for saturn\r\n\r\n        //rotation(saturn) ;\r\n\r\n        //create titan\r\n        Sphere titan = new Sphere();\r\n        setPosition(titan, 8);\r\n        titan.setRadius(planetSize);\r\n        //material for the titan\r\n        PhongMaterial titanMaterial = new PhongMaterial();\r\n        titanMaterial.setDiffuseMap(new Image(\"titanTexture.jpg\"));\r\n        titan.setMaterial(titanMaterial);\r\n\r\n        // rotation for titan\r\n\r\n//        rotation(titan) ;\r\n\r\n        //create neptune\r\n        Sphere neptune = new Sphere();\r\n        setPosition(neptune, 9);\r\n        neptune.setRadius(planetSize);\r\n        //material for the neptune\r\n        PhongMaterial neptuneMaterial = new PhongMaterial();\r\n        neptuneMaterial.setDiffuseMap(new Image(\"neptuneTexture.jpg\"));\r\n        neptune.setMaterial(neptuneMaterial);\r\n\r\n        // rotation for neptune\r\n\r\n        //rotation(neptune);\r\n\r\n        //create uranus\r\n        Sphere uranus = new Sphere();\r\n        setPosition(uranus, 10);\r\n        uranus.setRadius(planetSize);\r\n        //material for the uranus\r\n        PhongMaterial uranusMaterial = new PhongMaterial();\r\n        uranusMaterial.setDiffuseMap(new Image(\"uranusTexture.jpg\"));\r\n        uranus.setMaterial(uranusMaterial);\r\n\r\n        // rotation for uranus\r\n\r\n        //rotation(uranus);\r\n\r\n        // create the rocket\r\n\r\n        Box rocketBase = new Box(1000, 500, 1000);\r\n        setPosition(rocketBase, 3);\r\n        rocketBase.setTranslateX(rocketBase.getTranslateX() + earth.getRadius() + 100);\r\n        PhongMaterial rocketBaseMaterial = new PhongMaterial();\r\n        rocketBaseMaterial.setDiffuseColor(Color.DARKVIOLET);\r\n        rocketBase.setMaterial(rocketBaseMaterial);\r\n\r\n        // create the path of the rocket\r\n\r\n        Cylinder rocketPath = new Cylinder(100, 1000);\r\n        setPosition(rocketPath, 3);\r\n        rocketPath.setRotate(90);\r\n        rocketPath.setTranslateX(rocketPath.getTranslateX() + earth.getRadius() + 100);\r\n        PhongMaterial rocketPathMaterial = new PhongMaterial();\r\n        rocketPathMaterial.setDiffuseColor(Color.GOLD);\r\n        rocketPath.setMaterial(rocketPathMaterial);\r\n\r\n\r\n        group.getChildren().addAll(sun, mercury, venus, earth, moon, mars, jupiter, saturn, titan, neptune, uranus, rocketBase, rocketPath);\r\n\r\n        return group;\r\n    }\r\n\r\n    private static void rotation(Sphere sphere) {\r\n        RotateTransition rotate = new RotateTransition(Duration.seconds(10), sphere);\r\n        rotate.setByAngle(360);\r\n        rotate.setAxis(Rotate.Y_AXIS);\r\n        rotate.setInterpolator(Interpolator.LINEAR);\r\n        rotate.setCycleCount(Animation.INDEFINITE);\r\n        rotate.play();\r\n    }\r\n\r\n    private static void printLooks() {\r\n        System.out.println(\"looks at earth: \" + lookAtEarth);\r\n        System.out.println(\"looks at sun: \" + lookAtSun);\r\n        System.out.println(\"looks at titan: \" + lookAtTitan);\r\n        System.out.println(\"looks at everything: \" + lookatEverything);\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/example/planets/Merged.java b/src/main/java/com/example/planets/Merged.java
--- a/src/main/java/com/example/planets/Merged.java	
+++ b/src/main/java/com/example/planets/Merged.java	
@@ -2,9 +2,6 @@
 
 import com.example.planets.BackEnd.CelestialBody;
 import com.example.planets.BackEnd.Models.Gravity0;
-import javafx.animation.Animation;
-import javafx.animation.Interpolator;
-import javafx.animation.RotateTransition;
 import javafx.application.Application;
 import javafx.geometry.Point3D;
 import javafx.scene.*;
@@ -14,14 +11,12 @@
 import javafx.scene.input.KeyEvent;
 import javafx.scene.paint.Color;
 import javafx.scene.paint.PhongMaterial;
-import javafx.scene.shape.Box;
-import javafx.scene.shape.Cylinder;
-import javafx.scene.shape.Sphere;
+import javafx.scene.shape.*;
 import javafx.scene.transform.Rotate;
 import javafx.scene.transform.Translate;
 import javafx.stage.Stage;
-import javafx.util.Duration;
 
+import java.util.List;
 import java.util.Timer;
 import java.util.TimerTask;
 
@@ -39,20 +34,22 @@
 public class Merged extends Application {
     static Gravity0 model = new Gravity0(0, Math.PI / 2, new double[]{11, 11, 0});
     private static int scale = 25;
-    private static int smallScale = 50;
+    private static int smallScale = 25;
     private static int bigScale = 3000;
     private static int counter = 0;
-    private int planetSize = 6371 / 2;
+    private static Box[] path;
+    private static int planetSize = 6371 / 2;
     private static boolean lookAtEarth = false;
     private static boolean lookAtTitan = false;
     private static boolean lookAtSun = false;
     private static boolean lookatEverything = false;
     private static boolean lookAtSpaceship = false;
 
+    private static Group world = createEnvironment();
+
     @Override
     public void start(Stage stage) throws Exception {
         //create a new group
-        Group world = createEnvironment();
         Scene scene = new Scene(world, 1920, 1080, true);
         //Group axis = buildAxes();
         //world.getChildren().addAll(axis);
@@ -189,14 +186,11 @@
                     break;
             }
         });
-
         world.setTranslateZ(world.getTranslateZ() + 100000);
         worldRotX.setAngle(worldRotX.getAngle());
         System.out.println(camera.getRotationAxis());
         world.setRotationAxis(new Point3D(model.getBody(3).getPos()[0], model.getBody(3).getPos()[1], model.getBody(3).getPos()[2]));
-
         stage.show();
-
         Timer timer = new Timer();
         timer.schedule(new TimerTask() {
             @Override
@@ -225,11 +219,12 @@
                     camera.setTranslateY(model.getBody(8).getPos()[1] / scale + 115144);
                     camera.setTranslateZ(model.getBody(8).getPos()[2] / scale - 471948);
                 }
-                if (lookAtSpaceship){
+                if (lookAtSpaceship) {
                     camera.setTranslateX(model.getBody(11).getPos()[0] / scale + 1000);
                     camera.setTranslateY(model.getBody(11).getPos()[1] / scale + 2000);
                     camera.setTranslateZ(model.getBody(11).getPos()[2] / scale - 24000);
                 }
+                addRandomSphere();
             }
         }, 1, 1);
     }
@@ -250,13 +245,13 @@
         box.setTranslateZ(body.getPos()[2] / scale);
     }
 
-    private void setPosition(Sphere sphere, int index) {
+    private static void setPosition(Sphere sphere, int index) {
         sphere.setTranslateX(positions[index][0] / scale);
         sphere.setTranslateY(positions[index][1] / scale);
         sphere.setTranslateZ(positions[index][2] / scale);
     }
 
-    private void setPosition(Box box, int index) {
+    private static void setPosition(Box box, int index) {
         box.setTranslateX(positions[index][0] / scale);
         box.setTranslateY(positions[index][1] / scale);
         box.setTranslateZ(positions[index][2] / scale);
@@ -273,7 +268,7 @@
             {6.93e8, 2.59e8, -1.66e7}, {1.25e9, -7.60e8, -3.67e7}, {1.25e9, 7.61e8, -3.63e7},
             {4.45e9, -3.98e8, -9.45e7}, {1.96e9, 2.19e9, -1.72e7}};
 
-    public Group createEnvironment() {
+    public static Group createEnvironment() {
         Group group = new Group();
 
         //create the sun
@@ -302,10 +297,6 @@
         mercuryMaterial.setDiffuseMap(new Image("mercuryTexture.jpg"));
         mercury.setMaterial(mercuryMaterial);
 
-        // rotation for mercury
-
-        //rotation(mercury);
-
         //create venus
         Sphere venus = new Sphere();
         setPosition(venus, 2);
@@ -315,10 +306,6 @@
         venusMaterial.setDiffuseMap(new Image("venusTexture.jpg"));
         venus.setMaterial(venusMaterial);
 
-        // rotation for venus
-
-        //rotation(venus);
-
         //create earth
         Sphere earth = new Sphere();
         earth.setRadius(planetSize);
@@ -328,10 +315,6 @@
         earthMaterial.setDiffuseMap(new Image("earthTexture.jpg"));
         earth.setMaterial(earthMaterial);
 
-        // rotation for earth
-
-        //rotation(earth);
-
         //create moon
         Sphere moon = new Sphere();
         setPosition(moon, 4);
@@ -341,10 +324,6 @@
         moonMaterial.setDiffuseMap(new Image("moonTexture.jpg"));
         moon.setMaterial(moonMaterial);
 
-        // rotation for moon
-
-        //rotation(moon);
-
         //create mars
         Sphere mars = new Sphere();
         setPosition(mars, 5);
@@ -354,10 +333,6 @@
         marsMaterial.setDiffuseMap(new Image("marsTexture.png"));
         mars.setMaterial(marsMaterial);
 
-        // rotation for mars
-
-        //rotation(mars);
-
         //create jupiter
         Sphere jupiter = new Sphere();
         setPosition(jupiter, 6);
@@ -367,10 +342,6 @@
         jupiterMaterial.setDiffuseMap(new Image("jupiterTexture.jpg"));
         jupiter.setMaterial(jupiterMaterial);
 
-        // rotation for jupiter
-
-        //rotation(jupiter) ;
-
         //create saturn
         Sphere saturn = new Sphere();
         setPosition(saturn, 7);
@@ -380,10 +351,6 @@
         saturnMaterial.setDiffuseMap(new Image("saturnTexture.jpg"));
         saturn.setMaterial(saturnMaterial);
 
-        // rotation for saturn
-
-        //rotation(saturn) ;
-
         //create titan
         Sphere titan = new Sphere();
         setPosition(titan, 8);
@@ -393,10 +360,6 @@
         titanMaterial.setDiffuseMap(new Image("titanTexture.jpg"));
         titan.setMaterial(titanMaterial);
 
-        // rotation for titan
-
-//        rotation(titan) ;
-
         //create neptune
         Sphere neptune = new Sphere();
         setPosition(neptune, 9);
@@ -406,10 +369,6 @@
         neptuneMaterial.setDiffuseMap(new Image("neptuneTexture.jpg"));
         neptune.setMaterial(neptuneMaterial);
 
-        // rotation for neptune
-
-        //rotation(neptune);
-
         //create uranus
         Sphere uranus = new Sphere();
         setPosition(uranus, 10);
@@ -419,12 +378,7 @@
         uranusMaterial.setDiffuseMap(new Image("uranusTexture.jpg"));
         uranus.setMaterial(uranusMaterial);
 
-        // rotation for uranus
-
-        //rotation(uranus);
-
         // create the rocket
-
         Box rocketBase = new Box(1000, 500, 1000);
         setPosition(rocketBase, 3);
         rocketBase.setTranslateX(rocketBase.getTranslateX() + earth.getRadius() + 100);
@@ -432,37 +386,24 @@
         rocketBaseMaterial.setDiffuseColor(Color.DARKVIOLET);
         rocketBase.setMaterial(rocketBaseMaterial);
 
-        // create the path of the rocket
-
-        Cylinder rocketPath = new Cylinder(100, 1000);
-        setPosition(rocketPath, 3);
-        rocketPath.setRotate(90);
-        rocketPath.setTranslateX(rocketPath.getTranslateX() + earth.getRadius() + 100);
-        PhongMaterial rocketPathMaterial = new PhongMaterial();
-        rocketPathMaterial.setDiffuseColor(Color.GOLD);
-        rocketPath.setMaterial(rocketPathMaterial);
+        // get the positions of Titan and Earth
+        Point3D titanPos = new Point3D(titan.getTranslateX() ,-titan.getTranslateY() , titan.getTranslateZ() );
+        Point3D earthPos = new Point3D(earth.getTranslateX(), earth.getTranslateY(), earth.getTranslateZ());
+        System.out.println("titan point at: "+titanPos.toString());
+        System.out.println("earth point at: "+ earthPos.toString());
 
-
-        group.getChildren().addAll(sun, mercury, venus, earth, moon, mars, jupiter, saturn, titan, neptune, uranus, rocketBase, rocketPath);
+        group.getChildren().addAll(sun, mercury, venus, earth, moon, mars, jupiter, saturn, titan, neptune, uranus, rocketBase );
 
         return group;
     }
-
-    private static void rotation(Sphere sphere) {
-        RotateTransition rotate = new RotateTransition(Duration.seconds(10), sphere);
-        rotate.setByAngle(360);
-        rotate.setAxis(Rotate.Y_AXIS);
-        rotate.setInterpolator(Interpolator.LINEAR);
-        rotate.setCycleCount(Animation.INDEFINITE);
-        rotate.play();
+    private static void addRandomSphere() {
+        double x = model.getBody(11).getPos()[0];
+        double y = model.getBody(11).getPos()[1];
+        double z =  model.getBody(11).getPos()[2];
+        Sphere sphere = new Sphere(100);
+        sphere.setTranslateX(x);
+        sphere.setTranslateY(y);
+        sphere.setTranslateZ(z);
+        world.getChildren().add(sphere);
     }
-
-    private static void printLooks() {
-        System.out.println("looks at earth: " + lookAtEarth);
-        System.out.println("looks at sun: " + lookAtSun);
-        System.out.println("looks at titan: " + lookAtTitan);
-        System.out.println("looks at everything: " + lookatEverything);
-
-    }
-
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"bab05458-8716-4abd-8f37-31e577e5aaab\" name=\"Changes\" comment=\"orbits and stuff\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/com/example/planets/Merged.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/com/example/planets/Merged.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/com/example/planets/Merged$1.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/com/example/planets/Merged$1.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/com/example/planets/Merged$2.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/com/example/planets/Merged$2.class\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/target/classes/com/example/planets/Merged.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/target/classes/com/example/planets/Merged.class\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"importingSettings\">\r\n      <MavenImportingSettings>\r\n        <option name=\"workspaceImportEnabled\" value=\"true\" />\r\n      </MavenImportingSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2NCWcLuYHhcwt20P03l2liympkF\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\n    &quot;full.screen.before.presentation.mode&quot;: &quot;false&quot;,\n    &quot;last_opened_file_path&quot;: &quot;C:/Users/sirap/IdeaProjects/Toon09-Crew17_spaceMission/src/main/java/com/example/planets&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\n    &quot;settings.editor.selected.configurable&quot;: &quot;configurable.group.appearance&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\sirap\\IdeaProjects\\Toon09-Crew17_spaceMission\\src\\main\\java\\com\\example\\planets\" />\r\n      <recent name=\"C:\\Users\\suszw\\Desktop\\uni\\year_1\\Period4\\Data stuctures\\Planets\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\sirap\\IdeaProjects\\Toon09-Crew17_spaceMission\\src\\main\\java\\com\\example\\planets\" />\r\n      <recent name=\"C:\\Users\\suszw\\Desktop\\uni\\year_1\\Period4\\plswork\\src\\main\" />\r\n      <recent name=\"C:\\Users\\suszw\\Desktop\\uni\\year_1\\Period4\\plswork\\src\\resources\\com\" />\r\n      <recent name=\"C:\\Users\\suszw\\Desktop\\uni\\year_1\\Period4\\plswork\\src\\resources\" />\r\n      <recent name=\"C:\\Users\\suszw\\Desktop\\uni\\year_1\\Period4\\plswork\\src\\main\\java\\com\\example\\planets\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Merged\">\r\n    <configuration name=\"GUI\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.planets.GUI\" />\r\n      <module name=\"Planets\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.planets.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.planets.Main\" />\r\n      <module name=\"Planets\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.planets.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Merged\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.planets.Merged\" />\r\n      <module name=\"Planets\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.planets.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"NumericalExperiments\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"com.example.planets.NumericalExperiments\" />\r\n      <module name=\"Planets\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"com.example.planets.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Merged\" />\r\n        <item itemvalue=\"Application.GUI\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Application.NumericalExperiments\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"bab05458-8716-4abd-8f37-31e577e5aaab\" name=\"Changes\" comment=\"\" />\r\n      <created>1679168628679</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1679168628679</updated>\r\n      <workItem from=\"1679168629899\" duration=\"5702000\" />\r\n      <workItem from=\"1679174718563\" duration=\"10631000\" />\r\n      <workItem from=\"1679251843900\" duration=\"2627000\" />\r\n      <workItem from=\"1679265969801\" duration=\"3586000\" />\r\n      <workItem from=\"1679314405554\" duration=\"1248000\" />\r\n      <workItem from=\"1679317911374\" duration=\"1670000\" />\r\n      <workItem from=\"1679322438755\" duration=\"983000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"moving stuff\">\r\n      <created>1679322500707</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679322500707</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"re start\">\r\n      <created>1679396370529</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679396370529</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"re start\">\r\n      <created>1679396767097</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679396767097</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"re start\">\r\n      <created>1679405320081</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679405320082</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"re start\">\r\n      <created>1679412035915</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679412035915</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"re start\">\r\n      <created>1679413177924</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679413177924</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"re start\">\r\n      <created>1679427027346</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679427027346</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"added rotation and fixed marsTexture\">\r\n      <created>1679490585539</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679490585539</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"mars texture\">\r\n      <created>1679490816450</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679490816450</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"cleaning up the code in Merged/GUI\">\r\n      <created>1679493435545</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679493435545</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"moving violet rocket, working on rocketPath\">\r\n      <created>1679496927385</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679496927385</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"moving violet rocket, working on rocketPath\">\r\n      <created>1679497005165</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679497005165</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"cleaning up the code in Merged/GUI\">\r\n      <created>1679569477025</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679569477025</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"added cameras for titan sun earth and buttons for them\">\r\n      <created>1679576740525</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679576740525</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"orbits and stuff\">\r\n      <created>1679580574710</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1679580574710</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"16\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"moving stuff\" />\r\n    <MESSAGE value=\"re start\" />\r\n    <MESSAGE value=\"added rotation and fixed marsTexture\" />\r\n    <MESSAGE value=\"mars texture\" />\r\n    <MESSAGE value=\"cleaning up the code in Merged/GUI\" />\r\n    <MESSAGE value=\"moving violet rocket, working on rocketPath\" />\r\n    <MESSAGE value=\"added cameras for titan sun earth and buttons for them\" />\r\n    <MESSAGE value=\"orbits and stuff\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"orbits and stuff\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/src/main/java/com/example/planets/NumericalExperiments.java</url>\r\n          <line>66</line>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,7 +5,9 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="bab05458-8716-4abd-8f37-31e577e5aaab" name="Changes" comment="orbits and stuff">
+      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/planets/PolyLine3D.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ReadMe.txt" beforeDir="false" afterPath="$PROJECT_DIR$/ReadMe.txt" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/com/example/planets/Merged.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/planets/Merged.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/com/example/planets/Merged$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/example/planets/Merged$1.class" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/target/classes/com/example/planets/Merged$2.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/com/example/planets/Merged$2.class" afterDir="false" />
@@ -257,7 +259,14 @@
       <option name="project" value="LOCAL" />
       <updated>1679580574710</updated>
     </task>
-    <option name="localTasksCounter" value="16" />
+    <task id="LOCAL-00016" summary="orbits and stuff">
+      <created>1679582396980</created>
+      <option name="number" value="00016" />
+      <option name="presentableId" value="LOCAL-00016" />
+      <option name="project" value="LOCAL" />
+      <updated>1679582396980</updated>
+    </task>
+    <option name="localTasksCounter" value="17" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
Index: src/main/java/com/example/planets/PolyLine3D.java
===================================================================
diff --git a/src/main/java/com/example/planets/PolyLine3D.java b/src/main/java/com/example/planets/PolyLine3D.java
new file mode 100644
--- /dev/null	
+++ b/src/main/java/com/example/planets/PolyLine3D.java	
@@ -0,0 +1,154 @@
+/**
+ * PolyLine3D.java
+ *
+ * Copyright (c) 2013-2018, F(X)yz
+ * All rights reserved.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ *     * Redistributions of source code must retain the above copyright
+ * notice, this list of conditions and the following disclaimer.
+ *     * Redistributions in binary form must reproduce the above copyright
+ * notice, this list of conditions and the following disclaimer in the
+ * documentation and/or other materials provided with the distribution.
+ *     * Neither the name of F(X)yz, any associated website, nor the
+ * names of its contributors may be used to endorse or promote products
+ * derived from this software without specific prior written permission.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL F(X)yz BE LIABLE FOR ANY
+ * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ */
+
+package com.example.planets;
+
+
+import java.util.List;
+
+import javafx.geometry.Point3D;
+import javafx.scene.AmbientLight;
+import javafx.scene.DepthTest;
+import javafx.scene.Group;
+import javafx.scene.paint.Color;
+import javafx.scene.paint.PhongMaterial;
+import javafx.scene.shape.CullFace;
+import javafx.scene.shape.DrawMode;
+import javafx.scene.shape.MeshView;
+import javafx.scene.shape.TriangleMesh;
+
+/**
+ *
+ * @author Sean
+ */
+public class PolyLine3D extends Group {
+
+    public List<Point3D> points;
+    public float width = 2.0f;
+    public Color color = Color.WHITE;
+    private TriangleMesh mesh;
+    public MeshView meshView;
+    public PhongMaterial material;
+    public static enum LineType {RIBBON, TRIANGLE};
+
+    @Deprecated
+    public PolyLine3D(List<Point3D> points, int width, Color color) {
+        this(points, Float.valueOf(width), color);
+    }
+    //Creates a Ribbon PolyLine3D
+    public PolyLine3D(List<Point3D> points, float width, Color color) {
+        this(points, width, color, LineType.RIBBON);
+    }
+    @Deprecated
+    public PolyLine3D(List<Point3D> points, int width, Color color, LineType lineType ) {
+        this(points, Float.valueOf(width), color, lineType);
+    }
+    //Creates a PolyLine3D with the user's choice of mesh style
+    public PolyLine3D(List<Point3D> points, float width, Color color, LineType lineType ) {
+        this.points = points;
+        this.width = width;
+        this.color = color;
+        setDepthTest(DepthTest.ENABLE);
+        mesh  = new TriangleMesh();
+        switch(lineType) {
+            case TRIANGLE: buildTriangleTube(); break;
+            case RIBBON:
+            default: buildRibbon(); break;
+        }
+        //Need to add the mesh to a MeshView before adding to our 3D scene 
+        meshView = new MeshView(mesh);
+        meshView.setDrawMode(DrawMode.FILL);  //Fill so that the line shows width
+        material = new PhongMaterial(color);
+        material.setDiffuseColor(color);
+        material.setSpecularColor(color);
+        meshView.setMaterial(material);
+        //Make sure you Cull the Back so that no black shows through
+        meshView.setCullFace(CullFace.BACK);
+
+        //Add some ambient light so folks can see it
+        AmbientLight light = new AmbientLight(Color.WHITE);
+        light.getScope().add(meshView);
+        getChildren().add(light);
+        getChildren().add(meshView);
+    }
+    private void buildTriangleTube() {
+        //For each data point add three mesh points as an equilateral triangle
+        float half = width / 2.0f;
+        for(Point3D point: points) {
+            //-0.288675f*hw, -0.5f*hw, -0.204124f*hw,
+            mesh.getPoints().addAll((float) (point.getX() - 0.288675f*half), (float) (point.getY() - 0.5f*half), (float) (point.getZ() - 0.204124f*half));
+            //-0.288675f*hw, 0.5f*hw, -0.204124f*hw,
+            mesh.getPoints().addAll((float) (point.getX() - 0.288675f*half), (float) (point.getY() + 0.5f*half), (float) (point.getZ() - 0.204124f*half));
+            //0.57735f*hw, 0f, -0.204124f*hw
+            mesh.getPoints().addAll((float) (point.getX() + 0.57735f*half), (float) (point.getY() + 0.5f*half), (float) (point.getZ() - 0.204124f*half));
+
+        }
+        //add dummy Texture Coordinate
+        mesh.getTexCoords().addAll(0,0);
+        //Beginning End Cap
+        mesh.getFaces().addAll(0,0, 1,0, 2,0);
+        //Now generate trianglestrips between each point 
+        for(int i=3;i<points.size()*3;i+=3) {  //add each triangle tube segment 
+            //Vertices wound counter-clockwise which is the default front face of any Triange
+            //Triangle Tube Face 1
+            mesh.getFaces().addAll(i+2,0, i-2,0, i+1,0); //add secondary Width face
+            mesh.getFaces().addAll(i+2,0, i-1,0, i-2,0); //add primary face
+            //Triangle Tube Face 2
+            mesh.getFaces().addAll(i+2,0, i-3,0, i-1,0); //add secondary Width face
+            mesh.getFaces().addAll(i,0, i-3,0, i+2,0); //add primary face
+            //Triangle Tube Face 3
+            mesh.getFaces().addAll(i,0, i+1,0, i-3,0); //add primary face
+            mesh.getFaces().addAll(i+1,0, i-2,0, i-3,0); //add secondary Width face
+        }
+        //Final End Cap
+        int last = points.size()*3 -1;
+        mesh.getFaces().addAll(last,0, last-1,0, last-2,0);
+    }
+    private void buildRibbon() {
+        //add each point. For each point add another point shifted on Z axis by width
+        //This extra point allows us to build triangles later
+        for(Point3D point: points) {
+            mesh.getPoints().addAll((float) point.getX(), (float) point.getY(), (float) point.getZ());
+            mesh.getPoints().addAll((float) point.getX(), (float) point.getY(), (float) (point.getZ()+width));
+        }
+        //add dummy Texture Coordinate
+        mesh.getTexCoords().addAll(0,0);
+        //Now generate trianglestrips for each line segment
+        for(int i=2;i<points.size()*2;i+=2) {  //add each segment
+            //Vertices wound counter-clockwise which is the default front face of any Triange
+            //These triangles live on the frontside of the line facing the camera
+            mesh.getFaces().addAll(i,0,i-2,0,i+1,0); //add primary face
+            mesh.getFaces().addAll(i+1,0,i-2,0,i-1,0); //add secondary Width face
+            //Add the same faces but wind them clockwise so that the color looks correct when camera is rotated
+            //These triangles live on the backside of the line facing away from initial the camera
+            mesh.getFaces().addAll(i+1,0,i-2,0,i,0); //add primary face
+            mesh.getFaces().addAll(i-1,0,i-2,0,i+1,0); //add secondary Width face
+        }
+    }
+}
\ No newline at end of file
